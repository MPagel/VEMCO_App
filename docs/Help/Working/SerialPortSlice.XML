<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SerialPortSlice</name>
    </assembly>
    <members>
        <member name="T:SerialPortSlice.RealTimeEvents.ServerRealTimeEvents">
            <summary>
            This provides a convenient base class for events generated by the Serial Port Manager.
            </summary>
            <remarks>
            At the time of writing, this class simply passes null as the originating event as
            all events from this manager will be original with no preceding event that needs
            to be registered.
            </remarks>
        </member>
        <member name="M:SerialPortSlice.RealTimeEvents.ServerRealTimeEvents.#ctor(System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="message">The human readable reason for the event being generated.</param>
        </member>
        <member name="T:SerialPortSlice.RealTimeEvents.ServerStartUp">
            <summary>
            ServerStartUp fires when... well the server starts up and is ready to look for VEMCO receivers attached
            via a serial port.
            </summary>
        </member>
        <member name="M:SerialPortSlice.RealTimeEvents.ServerStartUp.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:SerialPortSlice.RealTimeEvents.ServerStop">
            <summary>
            ServerStop fires when the server is no longer looking for receivers but may still have configured
            receivers that have not been removed and may still be reading data.
            </summary>
        </member>
        <member name="M:SerialPortSlice.RealTimeEvents.ServerStop.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:SerialPortSlice.RealTimeEvents.ServerStopped">
            <summary>
            This event fires when the server has stopped listening for new receivers and has
            also removed all configured receivers from the service so no more data is being read from the hardware.
            </summary>
            <remarks>
            At the time of writing, we anticipate that this should be the last event that the system sends before 
            the process dies.
            </remarks>
        </member>
        <member name="M:SerialPortSlice.RealTimeEvents.ServerStopped.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="T:SerialPortSlice.RealTimeEvents.ServerException">
            <summary>
            Server Exceptions are generated by the Serial Port Servicer when a fault mode is entered.
            </summary>
        </member>
        <member name="M:SerialPortSlice.RealTimeEvents.ServerException.#ctor(System.String,System.Boolean)">
            <summary>
            Constructor for server error occuring without a corresponding exception.
            </summary>
            <param name="reason">The reason this exception was generated.</param>
            <param name="fatal">Set to true if the error forces the server to shutdown or restart.</param>
        </member>
        <member name="M:SerialPortSlice.RealTimeEvents.ServerException.#ctor(System.Exception,System.Boolean)">
             <summary>
            Constructor for server exception with the corresponding exception available.
             </summary>
             <param name="originatingException">The corresponding exception</param>
             <param name="fatal">Set to true if the error forces the server to shutdown or restart</param>
        </member>
        <member name="T:SerialPortSlice.SerialPortService">
            <summary>
            This class monitors the system for changes in the serial port enumeration (new or removed serial ports).  
            When a new serial port is discovered a Receiver is created.  When the serial
            port is removed from the system enumeration or a Receiver has TTL = 0, the device
            is removed from the service.
            </summary>
        </member>
        <member name="M:SerialPortSlice.SerialPortService.getServicer">
            <summary>
            The Serial Port Service is a singleton.
            </summary>
            <returns>A static reference to the singleton SerialPortService</returns>
        </member>
        <member name="M:SerialPortSlice.SerialPortService.run">
            <summary>
            Instructs the service to begin listening for VEMCO receivers attached to serial ports.
            </summary>
        </member>
        <member name="M:SerialPortSlice.SerialPortService.stop">
            <summary>
            Instructs the service to stop listening for receivers and to unmount any receivers running. 
            </summary>
            <remarks>
            This method allows each receiver several seconds (2.5 at the time of writing) to shutdown before
            simply being forced off.  In the intervening period, data may be received from the serial port
            and events subsequently dispatched.
            </remarks>
        </member>
        <member name="M:SerialPortSlice.SerialPortService.serialPortsService">
            <summary>
            This is the primary service loop which executes in its own thread.  It is started by run()
            and is destroyed by shutdown().
            </summary>
        </member>
    </members>
</doc>
